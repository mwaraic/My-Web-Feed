{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Maaz\\\\Documents\\\\GitHub\\\\ReactApp\\\\contact-app-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Maaz\\\\Documents\\\\GitHub\\\\ReactApp\\\\contact-app-backend\",\"filename\":\"C:\\\\Users\\\\Maaz\\\\Documents\\\\GitHub\\\\ReactApp\\\\contact-app-backend\\\\src\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Maaz\\\\Documents\\\\GitHub\\\\ReactApp\\\\contact-app-backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend",
      "filename": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])(); // Get User Tweet timeline by user ID\n// https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/quick-start\n\nvar needle = require('needle');\n\nvar NewsAPI = require('newsapi');\n\nvar googleNewsScraper = require('google-news-scraper');\n\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_express[\"default\"].json());\n\nvar googleNewsAPI = require(\"google-news-json\");\n\nvar withDB = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(operations, res) {\n    var client, db;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mongodb.MongoClient.connect('mongodb://localhost:27017', {\n              useNewUrlParser: true\n            });\n\n          case 3:\n            client = _context.sent;\n            db = client.db('my-blog');\n            _context.next = 7;\n            return operations(db);\n\n          case 7:\n            client.close();\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connecting to db',\n              error: _context.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function withDB(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\napp.get('/api/news/:name', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            /*  const newsapi = new NewsAPI('7b129d78037245f798f22542ae74e2e2');\r\n               \r\n              // To query top headlines\r\n              // All options passed to topHeadlines are optional, but you need to include at least one of them\r\n            newsapi.v2.topHeadlines({\r\n                q: req.params.name,\r\n              }).then(response => {\r\n                \r\n              });\r\n               newsapi.v2.sources({\r\n                  language: 'en',\r\n              }).then(response => {\r\n                console.log(response)\r\n                const source=[]\r\n                const domain=[]\r\n                response.sources.map(d=> source.push(d.id))\r\n                response.sources.map(d=>domain.push(d.url))\r\n            newsapi.v2.everything({\r\n                \r\n                q: req.params.name,\r\n                sources: source.toLocaleString(),\r\n                domains: domain.toLocaleString(),\r\n                from: '2021-06-24',\r\n                to: '2021-06-24',\r\n                language: 'en',\r\n              }).then(response => {\r\n                console.log(response.articles.length)\r\n                res.status(200).json(response)\r\n                });\r\n                }); \r\n            */\n            googleNewsAPI.getNews(googleNewsAPI.SEARCH, req.params.name, \"en-GB\", function (err, response) {\n              res.status(200).json(response);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/api/tweets/:id', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var userId, url, bearerToken, getUserTweets, getPage;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            userId = req.params.id;\n            url = \"https://api.twitter.com/2/users/\".concat(userId, \"/tweets\"); // The code below sets the bearer token from your environment variables\n            // To set environment variables on macOS or Linux, run the export command below from the terminal:\n            // export BEARER_TOKEN='YOUR-TOKEN'\n\n            bearerToken = 'AAAAAAAAAAAAAAAAAAAAAJK%2BQwEAAAAA0pQRjfJzqxD1z9mDnkOC3%2F4zem0%3DgI8JK8k2lHsgaoQwRkVkdpBQA11x3P1dXB3v0FGPvMaOwjDOtk';\n\n            getUserTweets = /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                var userTweets, params, options, hasNextPage, nextToken, userName, resp;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        userTweets = []; // we request the author_id expansion so that we can print out the user name later\n\n                        params = {\n                          \"max_results\": 5,\n                          \"tweet.fields\": \"created_at\",\n                          \"expansions\": \"author_id\"\n                        };\n                        options = {\n                          headers: {\n                            \"User-Agent\": \"v2UserTweetsJS\",\n                            \"authorization\": \"Bearer \".concat(bearerToken)\n                          }\n                        };\n                        hasNextPage = true;\n                        nextToken = null;\n                        console.log(\"Retrieving Tweets...\");\n\n                      case 6:\n                        if (!hasNextPage) {\n                          _context3.next = 13;\n                          break;\n                        }\n\n                        _context3.next = 9;\n                        return getPage(params, options, nextToken);\n\n                      case 9:\n                        resp = _context3.sent;\n\n                        if (resp && resp.meta && resp.meta.result_count && resp.meta.result_count > 0) {\n                          userName = resp.includes.users[0].username;\n\n                          if (resp.data) {\n                            userTweets.push.apply(userTweets, resp.data);\n                          }\n\n                          if (resp.meta.next_token) {\n                            hasNextPage = false;\n                          }\n                        } else {\n                          hasNextPage = false;\n                        }\n\n                        _context3.next = 6;\n                        break;\n\n                      case 13:\n                        console.dir(userTweets, {\n                          depth: null\n                        });\n                        console.log(\"Got \".concat(userTweets.length, \" Tweets from \").concat(userName, \" (user ID \").concat(userId, \")!\"));\n                        res.status(200).json(userTweets);\n\n                      case 16:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function getUserTweets() {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            getPage = /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(params, options, nextToken) {\n                var resp;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        if (nextToken) {\n                          params.pagination_token = nextToken;\n                        }\n\n                        _context4.prev = 1;\n                        _context4.next = 4;\n                        return needle('get', url, params, options);\n\n                      case 4:\n                        resp = _context4.sent;\n\n                        if (!(resp.statusCode != 200)) {\n                          _context4.next = 8;\n                          break;\n                        }\n\n                        console.log(\"\".concat(resp.statusCode, \" \").concat(resp.statusMessage, \":\\n\").concat(resp.body));\n                        return _context4.abrupt(\"return\");\n\n                      case 8:\n                        return _context4.abrupt(\"return\", resp.body);\n\n                      case 11:\n                        _context4.prev = 11;\n                        _context4.t0 = _context4[\"catch\"](1);\n                        throw new Error(\"Request failed: \".concat(_context4.t0));\n\n                      case 14:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[1, 11]]);\n              }));\n\n              return function getPage(_x7, _x8, _x9) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            getUserTweets();\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.get('/api/articles/:name', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(db) {\n                var articleName, articleInfo;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context6.next = 3;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articleInfo = _context6.sent;\n                        res.status(200).json(articleInfo);\n\n                      case 5:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x12) {\n                return _ref7.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.post('/api/articles/:name/upvote', /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(db) {\n                var articleName, articleInfo, updatedArticleInfo;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context8.next = 3;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articleInfo = _context8.sent;\n                        _context8.next = 6;\n                        return db.collection('articles').updateOne({\n                          name: articleName\n                        }, {\n                          '$set': {\n                            upvotes: articleInfo.upvotes + 1\n                          }\n                        });\n\n                      case 6:\n                        _context8.next = 8;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 8:\n                        updatedArticleInfo = _context8.sent;\n                        res.status(200).json(updatedArticleInfo);\n\n                      case 10:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n\n              return function (_x15) {\n                return _ref9.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref8.apply(this, arguments);\n  };\n}());\napp.post('/api/articles/:name/add-comment', function (req, res) {\n  var _req$body = req.body,\n      username = _req$body.username,\n      text = _req$body.text;\n  var articleName = req.params.name;\n  withDB( /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(db) {\n      var articleInfo, updatedArticleInfo;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return db.collection('articles').findOne({\n                name: articleName\n              });\n\n            case 2:\n              articleInfo = _context10.sent;\n              _context10.next = 5;\n              return db.collection('articles').updateOne({\n                name: articleName\n              }, {\n                '$set': {\n                  comments: articleInfo.comments.concat({\n                    username: username,\n                    text: text\n                  })\n                }\n              });\n\n            case 5:\n              _context10.next = 7;\n              return db.collection('articles').findOne({\n                name: articleName\n              });\n\n            case 7:\n              updatedArticleInfo = _context10.sent;\n              res.status(200).json(updatedArticleInfo);\n\n            case 9:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function (_x16) {\n      return _ref10.apply(this, arguments);\n    };\n  }(), res);\n});\napp.get('/hello', function (req, res) {\n  return res.send('Hello!');\n});\napp.listen(8000, function () {\n  return console.log('Listening on port 8000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "needle",
        "require",
        "NewsAPI",
        "googleNewsScraper",
        "use",
        "express",
        "urlencoded",
        "extended",
        "json",
        "googleNewsAPI",
        "withDB",
        "operations",
        "res",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "client",
        "db",
        "close",
        "status",
        "message",
        "error",
        "get",
        "req",
        "getNews",
        "SEARCH",
        "params",
        "name",
        "err",
        "response",
        "userId",
        "id",
        "url",
        "bearerToken",
        "getUserTweets",
        "userTweets",
        "options",
        "headers",
        "hasNextPage",
        "nextToken",
        "console",
        "log",
        "getPage",
        "resp",
        "meta",
        "result_count",
        "userName",
        "includes",
        "users",
        "username",
        "data",
        "push",
        "apply",
        "next_token",
        "dir",
        "depth",
        "length",
        "pagination_token",
        "statusCode",
        "statusMessage",
        "body",
        "Error",
        "articleName",
        "collection",
        "findOne",
        "articleInfo",
        "post",
        "updateOne",
        "upvotes",
        "updatedArticleInfo",
        "text",
        "comments",
        "concat",
        "send",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\",
      "sourcesContent": [
        "import express, { json } from 'express';\r\nimport {MongoClient} from 'mongodb';\r\n\r\nconst app= express();\r\n// Get User Tweet timeline by user ID\r\n// https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/quick-start\r\nconst needle = require('needle');\r\nconst NewsAPI = require('newsapi');\r\nconst googleNewsScraper = require('google-news-scraper')\r\napp.use(express.urlencoded({extended: true}));\r\napp.use(express.json());\r\nlet googleNewsAPI = require(\"google-news-json\");\r\nconst withDB = async (operations, res) => {\r\n    try {\r\n        const client = await MongoClient.connect('mongodb://localhost:27017', { useNewUrlParser: true });\r\n        const db = client.db('my-blog');\r\n    \r\n        await operations(db);\r\n    \r\n        client.close();\r\n    } catch (error) {\r\n        res.status(500).json({ message: 'Error connecting to db', error });\r\n    }\r\n}\r\napp.get('/api/news/:name', async (req, res) => {\r\n    \r\n  /*  const newsapi = new NewsAPI('7b129d78037245f798f22542ae74e2e2');\r\n     \r\n    // To query top headlines\r\n    // All options passed to topHeadlines are optional, but you need to include at least one of them\r\n  newsapi.v2.topHeadlines({\r\n      q: req.params.name,\r\n    }).then(response => {\r\n      \r\n    });\r\n     newsapi.v2.sources({\r\n        language: 'en',\r\n    }).then(response => {\r\n      console.log(response)\r\n      const source=[]\r\n      const domain=[]\r\n      response.sources.map(d=> source.push(d.id))\r\n      response.sources.map(d=>domain.push(d.url))\r\n newsapi.v2.everything({\r\n      \r\n      q: req.params.name,\r\n      sources: source.toLocaleString(),\r\n      domains: domain.toLocaleString(),\r\n      from: '2021-06-24',\r\n      to: '2021-06-24',\r\n      language: 'en',\r\n    }).then(response => {\r\n      console.log(response.articles.length)\r\n      res.status(200).json(response)\r\n\r\n    });\r\n\r\n    }); \r\n  */\r\n    \r\n    googleNewsAPI.getNews(googleNewsAPI.SEARCH,req.params.name, \"en-GB\", (err, response) => {\r\n       \r\n       res.status(200).json(response)\r\n    });\r\n    \r\n \r\n    \r\n})\r\napp.get('/api/tweets/:id', async (req, res) => {\r\n    \r\n        const userId = req.params.id;\r\n        const url = `https://api.twitter.com/2/users/${userId}/tweets`;\r\n\r\n// The code below sets the bearer token from your environment variables\r\n// To set environment variables on macOS or Linux, run the export command below from the terminal:\r\n// export BEARER_TOKEN='YOUR-TOKEN'\r\nconst bearerToken = 'AAAAAAAAAAAAAAAAAAAAAJK%2BQwEAAAAA0pQRjfJzqxD1z9mDnkOC3%2F4zem0%3DgI8JK8k2lHsgaoQwRkVkdpBQA11x3P1dXB3v0FGPvMaOwjDOtk';\r\n\r\nconst getUserTweets = async () => {\r\n\r\n    let userTweets = [];\r\n\r\n    // we request the author_id expansion so that we can print out the user name later\r\n    let params = {\r\n        \"max_results\": 5,\r\n        \"tweet.fields\": \"created_at\",\r\n        \"expansions\": \"author_id\"\r\n    }\r\n\r\n    const options = {\r\n        headers: {\r\n            \"User-Agent\": \"v2UserTweetsJS\",\r\n            \"authorization\": `Bearer ${bearerToken}`\r\n        }\r\n    }\r\n\r\n    let hasNextPage = true;\r\n    let nextToken = null;\r\n    let userName;\r\n    console.log(\"Retrieving Tweets...\");\r\n\r\n    while (hasNextPage) {\r\n        let resp = await getPage(params, options, nextToken);\r\n        if (resp && resp.meta && resp.meta.result_count && resp.meta.result_count > 0) {\r\n            userName = resp.includes.users[0].username;\r\n            if (resp.data) {\r\n                userTweets.push.apply(userTweets, resp.data);\r\n            }\r\n            if (resp.meta.next_token) {\r\n                hasNextPage = false;\r\n            }\r\n        } else {\r\n            hasNextPage = false;\r\n        }\r\n    }\r\n\r\n    console.dir(userTweets, {\r\n        depth: null\r\n    }\r\n    );\r\n    console.log(`Got ${userTweets.length} Tweets from ${userName} (user ID ${userId})!`); \r\n    res.status(200).json(userTweets)\r\n}\r\n\r\nconst getPage = async (params, options, nextToken) => {\r\n    if (nextToken) {\r\n        params.pagination_token = nextToken;\r\n    }\r\n\r\n    try {\r\n        const resp = await needle('get', url, params, options);\r\n\r\n        if (resp.statusCode != 200) {\r\n            console.log(`${resp.statusCode} ${resp.statusMessage}:\\n${resp.body}`);\r\n            return;\r\n        }\r\n        return resp.body;\r\n    } catch (err) {\r\n        throw new Error(`Request failed: ${err}`);\r\n    }\r\n   \r\n}\r\ngetUserTweets();\r\n})\r\napp.get('/api/articles/:name', async (req, res) => {\r\n    withDB(async (db) => {\r\n        const articleName = req.params.name;\r\n\r\n        const articleInfo = await db.collection('articles').findOne({ name: articleName })\r\n        res.status(200).json(articleInfo);\r\n    }, res);\r\n})\r\n\r\napp.post('/api/articles/:name/upvote', async (req, res) => {\r\n    withDB(async (db) => {\r\n        const articleName = req.params.name;\r\n    \r\n        const articleInfo = await db.collection('articles').findOne({ name: articleName });\r\n        await db.collection('articles').updateOne({ name: articleName }, {\r\n            '$set': {\r\n                upvotes: articleInfo.upvotes + 1,\r\n            },\r\n        });\r\n        const updatedArticleInfo = await db.collection('articles').findOne({ name: articleName });\r\n    \r\n        res.status(200).json(updatedArticleInfo);\r\n    }, res);\r\n});\r\n\r\napp.post('/api/articles/:name/add-comment', (req, res) => {\r\n    const { username, text } = req.body;\r\n    const articleName = req.params.name;\r\n\r\n    withDB(async (db) => {\r\n        const articleInfo = await db.collection('articles').findOne({ name: articleName });\r\n        await db.collection('articles').updateOne({ name: articleName }, {\r\n            '$set': {\r\n                comments: articleInfo.comments.concat({ username, text }),\r\n            },\r\n        });\r\n        const updatedArticleInfo = await db.collection('articles').findOne({ name: articleName });\r\n\r\n        res.status(200).json(updatedArticleInfo);\r\n    }, res);\r\n});\r\n\r\napp.get('/hello', (req,res)=> res.send('Hello!'));\r\napp.listen(8000, () =>console.log('Listening on port 8000'));"
      ]
    },
    "sourceType": "script",
    "mtime": 1624591333142
  }
}