{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Maaz\\\\Documents\\\\GitHub\\\\ReactApp\\\\contact-app-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Maaz\\\\Documents\\\\GitHub\\\\ReactApp\\\\contact-app-backend\",\"filename\":\"C:\\\\Users\\\\Maaz\\\\Documents\\\\GitHub\\\\ReactApp\\\\contact-app-backend\\\\src\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Maaz\\\\Documents\\\\GitHub\\\\ReactApp\\\\contact-app-backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend",
      "filename": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_express[\"default\"].json());\n\nvar googleNewsAPI = require(\"google-news-json\");\n\nvar reddit = require('scrap-reddit');\n\nvar dotenv = require('dotenv');\n\ndotenv.config();\n\nvar withDB = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(operations, res) {\n    var client, db;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mongodb.MongoClient.connect('mongodb://localhost:27017', {\n              useNewUrlParser: true\n            });\n\n          case 3:\n            client = _context.sent;\n            db = client.db('my-blog');\n            _context.next = 7;\n            return operations(db);\n\n          case 7:\n            client.close();\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'Error connecting to db',\n              error: _context.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function withDB(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\napp.get('/api/news/:name', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(db) {\n                var currentUser, preferances, tags, collection, i, news, _final;\n\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        currentUser = req.params.name;\n                        _context2.next = 3;\n                        return db.collection('preferances').findOne({\n                          name: currentUser\n                        });\n\n                      case 3:\n                        preferances = _context2.sent;\n                        tags = preferances.news;\n                        collection = [];\n                        i = 0;\n\n                      case 7:\n                        if (!(i < tags.length)) {\n                          _context2.next = 15;\n                          break;\n                        }\n\n                        _context2.next = 10;\n                        return googleNewsAPI.getNews(googleNewsAPI.SEARCH, tags[i].value, \"en-GB\");\n\n                      case 10:\n                        news = _context2.sent;\n                        collection.push(news.items);\n\n                      case 12:\n                        i++;\n                        _context2.next = 7;\n                        break;\n\n                      case 15:\n                        _final = [];\n\n                        for (i = 0; i < tags.length; i++) {\n                          _final = _final.concat(collection[i]);\n                        }\n\n                        res.status(200).json(_final);\n\n                      case 18:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x5) {\n                return _ref3.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/api/reddit/:name', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(db) {\n                var currentUser, preferances, tags, collection, i, post, _final2;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        currentUser = req.params.name;\n                        _context4.next = 3;\n                        return db.collection('preferances').findOne({\n                          name: currentUser\n                        });\n\n                      case 3:\n                        preferances = _context4.sent;\n                        tags = preferances.reddit;\n                        collection = [];\n                        i = 0;\n\n                      case 7:\n                        if (!(i < tags.length)) {\n                          _context4.next = 15;\n                          break;\n                        }\n\n                        _context4.next = 10;\n                        return reddit.topPost(tags[i].value);\n\n                      case 10:\n                        post = _context4.sent;\n                        collection.push(post.data);\n\n                      case 12:\n                        i++;\n                        _context4.next = 7;\n                        break;\n\n                      case 15:\n                        _final2 = [];\n\n                        for (i = 0; i < tags.length; i++) {\n                          _final2 = _final2.concat(collection[i]);\n                        }\n\n                        res.status(200).json(_final2);\n\n                      case 18:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.get('/api/tweets/:name', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(db) {\n                var currentUser, preferances, tags, collection, _loop, i;\n\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        currentUser = req.params.name;\n                        _context8.next = 3;\n                        return db.collection('preferances').findOne({\n                          name: currentUser\n                        });\n\n                      case 3:\n                        preferances = _context8.sent;\n                        tags = preferances.twitter;\n                        collection = [];\n\n                        _loop = function _loop() {\n                          var userId = tags[i].value;\n                          var url = \"https://api.twitter.com/2/users/\".concat(userId, \"/tweets\"); // The code below sets the bearer token from your environment variables\n                          // To set environment variables on macOS or Linux, run the export command below from the terminal:\n                          // export BEARER_TOKEN='YOUR-TOKEN'\n\n                          var bearerToken = process.env.BEARER_TOKEN;\n\n                          var getUserTweets = /*#__PURE__*/function () {\n                            var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                              var userTweets, params, options, hasNextPage, nextToken, userName, resp;\n                              return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                                while (1) {\n                                  switch (_context6.prev = _context6.next) {\n                                    case 0:\n                                      userTweets = []; // we request the author_id expansion so that we can print out the user name later\n\n                                      params = {\n                                        \"max_results\": 10,\n                                        \"tweet.fields\": \"created_at\",\n                                        \"expansions\": \"author_id\"\n                                      };\n                                      options = {\n                                        headers: {\n                                          \"User-Agent\": \"v2UserTweetsJS\",\n                                          \"authorization\": \"Bearer \".concat(bearerToken)\n                                        }\n                                      };\n                                      hasNextPage = true;\n                                      nextToken = null;\n                                      console.log(\"Retrieving Tweets...\");\n\n                                    case 6:\n                                      if (!hasNextPage) {\n                                        _context6.next = 13;\n                                        break;\n                                      }\n\n                                      _context6.next = 9;\n                                      return getPage(params, options, nextToken);\n\n                                    case 9:\n                                      resp = _context6.sent;\n\n                                      if (resp && resp.meta && resp.meta.result_count && resp.meta.result_count > 0) {\n                                        userName = resp.includes.users[0].username;\n\n                                        if (resp.data) {\n                                          userTweets.push.apply(userTweets, resp.data);\n                                        }\n\n                                        if (resp.meta.next_token) {\n                                          hasNextPage = false;\n                                        }\n                                      } else {\n                                        hasNextPage = false;\n                                      }\n\n                                      _context6.next = 6;\n                                      break;\n\n                                    case 13:\n                                      collection = collection.concat(userTweets);\n\n                                      if (collection.length === tags.length * 10) {\n                                        res.status(200).json(collection);\n                                      }\n\n                                    case 15:\n                                    case \"end\":\n                                      return _context6.stop();\n                                  }\n                                }\n                              }, _callee6);\n                            }));\n\n                            return function getUserTweets() {\n                              return _ref8.apply(this, arguments);\n                            };\n                          }();\n\n                          var getPage = /*#__PURE__*/function () {\n                            var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(params, options, nextToken) {\n                              var resp;\n                              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                                while (1) {\n                                  switch (_context7.prev = _context7.next) {\n                                    case 0:\n                                      if (nextToken) {\n                                        params.pagination_token = nextToken;\n                                      }\n\n                                      _context7.prev = 1;\n                                      _context7.next = 4;\n                                      return needle('get', url, params, options);\n\n                                    case 4:\n                                      resp = _context7.sent;\n\n                                      if (!(resp.statusCode != 200)) {\n                                        _context7.next = 8;\n                                        break;\n                                      }\n\n                                      console.log(\"\".concat(resp.statusCode, \" \").concat(resp.statusMessage, \":\\n\").concat(resp.body));\n                                      return _context7.abrupt(\"return\");\n\n                                    case 8:\n                                      return _context7.abrupt(\"return\", resp.body);\n\n                                    case 11:\n                                      _context7.prev = 11;\n                                      _context7.t0 = _context7[\"catch\"](1);\n                                      throw new Error(\"Request failed: \".concat(_context7.t0));\n\n                                    case 14:\n                                    case \"end\":\n                                      return _context7.stop();\n                                  }\n                                }\n                              }, _callee7, null, [[1, 11]]);\n                            }));\n\n                            return function getPage(_x12, _x13, _x14) {\n                              return _ref9.apply(this, arguments);\n                            };\n                          }();\n\n                          getUserTweets();\n                        };\n\n                        for (i = 0; i < tags.length; i++) {\n                          _loop();\n                        }\n\n                      case 8:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n\n              return function (_x11) {\n                return _ref7.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.get('/api/preferances/:name', /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(db) {\n                var NewUser, preferances;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        NewUser = req.params.name;\n                        _context10.next = 3;\n                        return db.collection('preferances').findOne({\n                          name: NewUser\n                        });\n\n                      case 3:\n                        preferances = _context10.sent;\n                        res.status(200).json(preferances);\n\n                      case 5:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10);\n              }));\n\n              return function (_x17) {\n                return _ref11.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref10.apply(this, arguments);\n  };\n}());\napp.post('/api/update-preferances/:name', function (req, res) {\n  var _req$body = req.body,\n      twitter = _req$body.twitter,\n      reddit = _req$body.reddit,\n      news = _req$body.news;\n  var NewUser = req.params.name;\n  withDB( /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(db) {\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return db.collection('preferances').updateOne({\n                name: NewUser\n              }, {\n                '$set': {\n                  twitter: twitter,\n                  news: news,\n                  reddit: reddit\n                }\n              });\n\n            case 2:\n              res.status(200).json('maaz');\n\n            case 3:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function (_x18) {\n      return _ref12.apply(this, arguments);\n    };\n  }(), res);\n});\napp.post('/api/set-preferances/:name', function (req, res) {\n  var _req$body2 = req.body,\n      twitter = _req$body2.twitter,\n      reddit = _req$body2.reddit,\n      news = _req$body2.news;\n  var NewUser = req.params.name;\n  withDB( /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(db) {\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return db.collection('preferances').insertOne({\n                name: NewUser,\n                twitter: twitter,\n                reddit: reddit,\n                news: news\n              });\n\n            case 2:\n              res.status(200).json('maaz');\n\n            case 3:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function (_x19) {\n      return _ref13.apply(this, arguments);\n    };\n  }(), res);\n});\napp.listen(8000, function () {\n  return console.log('Listening on port 8000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "express",
        "urlencoded",
        "extended",
        "json",
        "googleNewsAPI",
        "require",
        "reddit",
        "dotenv",
        "config",
        "withDB",
        "operations",
        "res",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "client",
        "db",
        "close",
        "status",
        "message",
        "error",
        "get",
        "req",
        "currentUser",
        "params",
        "name",
        "collection",
        "findOne",
        "preferances",
        "tags",
        "news",
        "i",
        "length",
        "getNews",
        "SEARCH",
        "value",
        "push",
        "items",
        "final",
        "concat",
        "topPost",
        "post",
        "data",
        "twitter",
        "userId",
        "url",
        "bearerToken",
        "process",
        "env",
        "BEARER_TOKEN",
        "getUserTweets",
        "userTweets",
        "options",
        "headers",
        "hasNextPage",
        "nextToken",
        "console",
        "log",
        "getPage",
        "resp",
        "meta",
        "result_count",
        "userName",
        "includes",
        "users",
        "username",
        "apply",
        "next_token",
        "pagination_token",
        "needle",
        "statusCode",
        "statusMessage",
        "body",
        "Error",
        "NewUser",
        "updateOne",
        "insertOne",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Maaz\\Documents\\GitHub\\ReactApp\\contact-app-backend\\src\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport {MongoClient} from 'mongodb';\r\nconst app= express();\r\napp.use(express.urlencoded({extended: true}));\r\napp.use(express.json());\r\nlet googleNewsAPI = require(\"google-news-json\");\r\nconst reddit = require('scrap-reddit')\r\nconst dotenv = require('dotenv');\r\ndotenv.config();\r\n\r\nconst withDB = async (operations, res) => {\r\n    try {\r\n        const client = await MongoClient.connect('mongodb://localhost:27017', { useNewUrlParser: true });\r\n        const db = client.db('my-blog');\r\n    \r\n        await operations(db);\r\n    \r\n        client.close();\r\n    } catch (error) {\r\n        res.status(500).json({ message: 'Error connecting to db', error });\r\n    }\r\n}\r\napp.get('/api/news/:name', async (req, res) => {\r\n    withDB(async (db) => {\r\n        const currentUser = req.params.name;\r\n        const preferances = await db.collection('preferances').findOne({ name: currentUser })\r\n        const tags=preferances.news;\r\n   var collection=[]\r\n   for(var i=0; i<tags.length;i++){\r\n    \r\n    let news= await googleNewsAPI.getNews(googleNewsAPI.SEARCH,tags[i].value, \"en-GB\");\r\n    collection.push(news.items)\r\n}   \r\nvar final=[]\r\nfor(var i=0; i<tags.length;i++){\r\n   \r\n   final= final.concat(collection[i])\r\n\r\n}  \r\n    res.status(200).json(final)\r\n    }, res);\r\n   \r\n})\r\n\r\napp.get('/api/reddit/:name', async (req, res) => {\r\n    withDB(async (db) => {\r\n        const currentUser = req.params.name;\r\n        const preferances = await db.collection('preferances').findOne({ name: currentUser })\r\n        const tags=preferances.reddit;\r\n    var collection=[]\r\n   for(var i=0; i<tags.length;i++){\r\n    const post = await reddit.topPost(tags[i].value)\r\n    collection.push(post.data)\r\n   }\r\n   var final=[]\r\nfor(var i=0; i<tags.length;i++){\r\n   \r\n   final= final.concat(collection[i])\r\n\r\n}  \r\n    res.status(200).json(final)\r\n}, res);\r\n   \r\n})\r\n\r\napp.get('/api/tweets/:name', async (req, res) => {\r\n    withDB(async (db) => {\r\n        const currentUser = req.params.name;\r\n        const preferances = await db.collection('preferances').findOne({ name: currentUser })\r\n        const tags=preferances.twitter;\r\n    var collection=[]\r\n\r\n    for(var i=0;i<tags.length;i++){\r\n\r\n        const userId = tags[i].value;\r\n        const url = `https://api.twitter.com/2/users/${userId}/tweets`;\r\n\r\n// The code below sets the bearer token from your environment variables\r\n// To set environment variables on macOS or Linux, run the export command below from the terminal:\r\n// export BEARER_TOKEN='YOUR-TOKEN'\r\nconst bearerToken = process.env.BEARER_TOKEN;\r\n\r\nconst getUserTweets = async () => {\r\n    let userTweets = [];\r\n\r\n    // we request the author_id expansion so that we can print out the user name later\r\n    let params = {\r\n        \"max_results\": 10,\r\n        \"tweet.fields\": \"created_at\",\r\n        \"expansions\": \"author_id\"\r\n    }\r\n\r\n    const options = {\r\n        headers: {\r\n            \"User-Agent\": \"v2UserTweetsJS\",\r\n            \"authorization\": `Bearer ${bearerToken}`\r\n        }\r\n    }\r\n\r\n    let hasNextPage = true;\r\n    let nextToken = null;\r\n    let userName;\r\n    console.log(\"Retrieving Tweets...\");\r\n\r\n    while (hasNextPage) {\r\n        let resp = await getPage(params, options, nextToken);\r\n        if (resp && resp.meta && resp.meta.result_count && resp.meta.result_count > 0) {\r\n            userName = resp.includes.users[0].username;\r\n            if (resp.data) {\r\n                userTweets.push.apply(userTweets, resp.data);\r\n            }\r\n            if (resp.meta.next_token) {\r\n                hasNextPage = false;\r\n            }\r\n        } else {\r\n            hasNextPage = false;\r\n        }\r\n    }\r\n \r\n    collection =collection.concat(userTweets)\r\n    if(collection.length===tags.length*10){\r\n        res.status(200).json(collection)\r\n    }\r\n}\r\n\r\nconst getPage = async (params, options, nextToken) => {\r\n    if (nextToken) {\r\n        params.pagination_token = nextToken;\r\n    }\r\n\r\n    try {\r\n        const resp = await needle('get', url, params, options);\r\n\r\n        if (resp.statusCode != 200) {\r\n            console.log(`${resp.statusCode} ${resp.statusMessage}:\\n${resp.body}`);\r\n            return;\r\n        }\r\n        return resp.body;\r\n    } catch (err) {\r\n        throw new Error(`Request failed: ${err}`);\r\n    }\r\n   \r\n}\r\ngetUserTweets();}\r\n\r\n        \r\n}, res);\r\n   \r\n})\r\n\r\napp.get('/api/preferances/:name', async (req, res) => {\r\n    withDB(async (db) => {\r\n        const NewUser = req.params.name;\r\n        const preferances = await db.collection('preferances').findOne({ name: NewUser})\r\n        res.status(200).json(preferances);\r\n    }, res);\r\n})\r\n\r\napp.post('/api/update-preferances/:name', (req, res) => {\r\n    const { twitter, reddit, news} = req.body;\r\n    const NewUser = req.params.name;\r\n\r\n    withDB(async (db) => {\r\n        \r\n        await db.collection('preferances').updateOne({ name: NewUser }, {\r\n            '$set': {\r\n                twitter:twitter, news: news, reddit: reddit\r\n            },\r\n        });\r\n      res.status(200).json('maaz')\r\n    }, res);\r\n    \r\n});\r\n\r\napp.post('/api/set-preferances/:name', (req, res) => {\r\n    const { twitter, reddit, news} = req.body;\r\n    const NewUser = req.params.name;\r\n\r\n    withDB(async (db) => {\r\n        \r\n        await db.collection('preferances').insertOne(\r\n            {name: NewUser, twitter: twitter, reddit: reddit, news:news }\r\n        )\r\n      res.status(200).json('maaz')\r\n    }, res);\r\n    \r\n});\r\n\r\napp.listen(8000, () =>console.log('Listening on port 8000'));"
      ]
    },
    "sourceType": "script",
    "mtime": 1625769640316
  }
}